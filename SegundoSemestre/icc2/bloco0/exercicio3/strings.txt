#include "strings.h"


string_t lerLinha(FILE *std, int *boolean) {
    fscanf(std, "%*[\n\r]s");
    string_t string = malloc(sizeof(char));
    int characters = 0;
    int numberMaxChar = 1;
    do {
        fscanf(std, "%c", &string[characters]);
        if (string[characters] == '\n' || string[characters] == EOF) {
            if (boolean != NULL)
                *boolean = string[characters] == EOF;
            string[characters] = '\0';
        }
        characters++;
        if (characters == numberMaxChar) {
            numberMaxChar *= 2;
            string = realloc(string, (numberMaxChar) * sizeof(char));
        }

    } while (string[characters - 1] != '\0');

    string = realloc(string, (characters + 1) * sizeof(char));

    return string;
}


void lendoArquivo(FILE *arq, lista_t *l) {
    int boolean = 0;
    while (!boolean) {
        string_t palavra = lerLinha(arq, &boolean);
        insere(l, palavra);
    }
    no_t *p = l->inicio;
    for (int i = 0; i < 3; i++) {
        printf("%s\n", p->info);
        p = p->prox;
    }
    fclose(arq);
}

alfabeto_t *vetorIndices(lista_t *l, int *tamAlf) {
    alfabeto_t alf[26];
    no_t *p = l->inicio;
    while (p != NULL) {
        char c = p->info[0] - '0';
        if (alf[c].no == NULL) {
            alf[c].no = p;
            (*tamAlf)++;
        }
        p = p->prox;
    }
    return alf;
}

void buscaVetor(lista_t *l, alfabeto_t alf[26], string_t palavraAProcurar) {
    int nosPercorridos = 0;
    char c = palavraAProcurar[0] - '0';
    no_t *p = alf[c].no;

    while (p->info[0] == palavraAProcurar[0]) {
        if (strcmp(p->info, palavraAProcurar) == 0) {
            printf("%d\n", nosPercorridos);
            return;
        }
        p = p->prox;
        nosPercorridos++;
    }
    printf("Palavra nao existe na lista.\n");
}